/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AssignmentCreateNestedManyWithoutCoursesInput } from "./AssignmentCreateNestedManyWithoutCoursesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { DepartmentWhereUniqueInput } from "../../department/base/DepartmentWhereUniqueInput";
import { QuizCreateNestedManyWithoutCoursesInput } from "./QuizCreateNestedManyWithoutCoursesInput";
import { TeacherWhereUniqueInput } from "../../teacher/base/TeacherWhereUniqueInput";

@InputType()
class CourseCreateInput {
  @ApiProperty({
    required: false,
    type: () => AssignmentCreateNestedManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => AssignmentCreateNestedManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => AssignmentCreateNestedManyWithoutCoursesInput, {
    nullable: true,
  })
  assignments?: AssignmentCreateNestedManyWithoutCoursesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: () => DepartmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DepartmentWhereUniqueInput)
  @IsOptional()
  @Field(() => DepartmentWhereUniqueInput, {
    nullable: true,
  })
  department?: DepartmentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => QuizCreateNestedManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => QuizCreateNestedManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => QuizCreateNestedManyWithoutCoursesInput, {
    nullable: true,
  })
  quizzes?: QuizCreateNestedManyWithoutCoursesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  section?: string | null;

  @ApiProperty({
    required: false,
    type: () => TeacherWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TeacherWhereUniqueInput)
  @IsOptional()
  @Field(() => TeacherWhereUniqueInput, {
    nullable: true,
  })
  teacher?: TeacherWhereUniqueInput | null;
}

export { CourseCreateInput as CourseCreateInput };
