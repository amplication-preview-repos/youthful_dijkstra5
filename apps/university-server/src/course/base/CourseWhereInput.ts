/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AssignmentListRelationFilter } from "../../assignment/base/AssignmentListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DepartmentWhereUniqueInput } from "../../department/base/DepartmentWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { QuizListRelationFilter } from "../../quiz/base/QuizListRelationFilter";
import { TeacherWhereUniqueInput } from "../../teacher/base/TeacherWhereUniqueInput";

@InputType()
class CourseWhereInput {
  @ApiProperty({
    required: false,
    type: () => AssignmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AssignmentListRelationFilter)
  @IsOptional()
  @Field(() => AssignmentListRelationFilter, {
    nullable: true,
  })
  assignments?: AssignmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  code?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DepartmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DepartmentWhereUniqueInput)
  @IsOptional()
  @Field(() => DepartmentWhereUniqueInput, {
    nullable: true,
  })
  department?: DepartmentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => QuizListRelationFilter,
  })
  @ValidateNested()
  @Type(() => QuizListRelationFilter)
  @IsOptional()
  @Field(() => QuizListRelationFilter, {
    nullable: true,
  })
  quizzes?: QuizListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  section?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TeacherWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TeacherWhereUniqueInput)
  @IsOptional()
  @Field(() => TeacherWhereUniqueInput, {
    nullable: true,
  })
  teacher?: TeacherWhereUniqueInput;
}

export { CourseWhereInput as CourseWhereInput };
